{"./":{"url":"./","title":"关于","keywords":"","body":"Introduction "},"project/":{"url":"project/","title":"项目","keywords":"","body":"项目 "},"share/":{"url":"share/","title":"技术分享","keywords":"","body":"技术分享 "},"share/how-to-use.html":{"url":"share/how-to-use.html","title":"如何使用这个wiki系统","keywords":"","body":"如何使用这个wiki系统 介绍 这个网站通过 gitbook 自动生成。具体介绍可以看 GitBook中文文档 安装 1、安装 node 可以参考 Installing Node.js via package manager 安装完成后，通过 node -v 检查一下 2、安装 GitBook # 安装全局 gitbook，root 用户执行 npm install gitbook-cli -g # 安装本地模块 npm install 如何使用 git clone cd # 第一次要执行一下这个命令 gitbook install git init # 执行这个命令，我们可以在本地看下具体的效果 # 访问地址为 http://localhost:4000 gitbook build && gitbook serve 在项目的目录中，有一个 SUMMARY.md 的文件，这里定义了网站的导航栏。如果你添加了新的目录， 然后执行 git init 它会自动生成相应的目录以及文件。 最终 build 后生成的 html 文件在 _book 目录下。 我写了一个makefile，每次我们写完可以直接执行 make 就可以，不需要每次都输入上面的命令了。 最后我们要把改动 push 到 github 上去。 如何部署 上面我们在 _book 目录下生成了网站的 html 文件，我们只需要将它 push 到 github 就可以了。 可以直接执行命令 make 也可以手动输入命令 push。 git add . git commit -m \"\" git push "},"share/git-workflow.html":{"url":"share/git-workflow.html","title":"git的workflow","keywords":"","body":"git的workflow "}}